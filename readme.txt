Версия написана на python 3.8.3

Скрипт служит как ознакомительньный материал алгоритма подбора, отправки post-запросов, к форме базирующейся на php + mysql.

#Скрипт заносит в массив, доступные пароли / логины из файла data.txt
#Поочередно, задействуя post-request отправляет данные, по примеру:

login[0]:password[1]
login[0]:password[2]
login[0]:password[3]

#В случае совпадение пары, выводит результат.
(На тестовой форме в содержимом html страницы выводится значение переменной "h_text" значение "Please fill in your credentials to login."
#При успешной паре после переадресации, в структуре документа html, не будет найдено значение переменной h_text.
#В случае когда пара не подходит,содержимое переменной будет найдено на странице, и продолжится перебор login;password

Скрипт служит как ознакомительньный материал алгоритма подбора, отправки post-запросов.

Инструкция для адаптации
#data.txt - построчно заполняем информацией предполагаемых паролей и логинов
#в gui скрипта вводим url : пример - 127.0.0.1/testing_form/login.php

Используемые модули upd:
#gui tkinter - основной интерфейс ввода url, содержимое для удобства выводится в консоль (как вариант использовать log).
#модуль request,re - используются для получения значений url, поиск по значению.

Нюансы работы
#low-level, защита в виде переадресации, например timeout, с подгрузкой html документа, может выдать ложный результат.
#Отсутствует возможность через gui задавать путь файла password.txt, а также имя.
#Отсутствует возомжность ввести элемент из структуры html прямо в gui скрипта, пока что требуется редактирование исходного файла source.py

upd: Практическое применение, на low-level ctf challenge, хороший результат выдает в совокупности с cupp.

Веселитесь!
